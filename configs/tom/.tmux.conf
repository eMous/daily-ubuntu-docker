# cat << EOF >/dev/null
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Solarized theme
#set -g @plugin 'seebi/tmux-colors-solarized'
# set -g @colors-solarized 'dark'

# Terminal type configuration
set-option -g xterm-keys on
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*-256color:Tc"
set-window-option -g mode-keys vi

set -g status-right-length 100
set -ga status-right "#[bg=red]#(cut -c3- ~/.tmux.conf | zsh -s update_covid)" 
set -ga status-right "#[bg=magenta]#(cut -c3- ~/.tmux.conf | zsh -s update_exchange)" 




# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
##set -g default-command /bin/zsh

# EOF
# #------------------envi------------------
# current_conf="$HOME/.tmux.conf"
# #------------------data------------------
# _data_covid=(0 nan⬇ 06-20 1624383554)
# _data_exchange=(4.89000 0.0026⬆ 2 06-22 1624383557)
# #------------------func------------------
# update_covid() {
# 	# Covid
# 	last_update=${_data_covid[4]}
# 	# echo $(($(date +%s) -  last_update))
# 	(( $(date +%s) > 60*60*12 + last_update )) && covid &
# 	echo -n $'🏥 '"${_data_covid[1]} ${_data_covid[2]}  ${_data_covid[3]} $(date -r ${_data_covid[3]} "+%m-%d")" 	
# } 
# covid() {
# 	let day_before=0
# 	alias date="TZ=UTC date"
# 	yyyyesterday=$(date -v-$((4+day_before))d +%F)
# 	yyyesterday=$(date -v-$((3+day_before))d +%F)
# 	yyesterday=$(date -v-$((2+day_before))d +%F)
# 	yesterday=$(date -v-$((1+day_before))d +%F)
# 	curl_log_file='/Users/tom/GoogleDrive/Dev/log/covid/curl.log' 
# 	temp_data=$(2>$curl_log_file curl --location --request GET \
# 		"https://api.covid19api.com/country/australia/status/confirmed/live?from=${yyyyesterday}T00:00:00Z&to=${yesterday}T00:00:01Z")
# 	covid_datas=("${=$(echo -n $temp_data |  perl -wnE 'say for/New South Wales.*?Cases":\d*/g' | grep -o '\d*$')}")
# 	setopt EXTENDED_GLOB
# 	let num=1
# 	for day in yyyyesterday yyyesterday yyesterday yesterday
# 	do
# 		declare ${day}_data=${covid_datas[$num]}
# 		num+=1
# 	#	eval echo \$${day}_data
# 	done
# 	increase_yes=$((yesterday_data-yyesterday_data))
# 	increase_yyes=$((yyesterday_data-yyyesterday_data))
# 	increase_yyyes=$((yyyesterday_data-yyyyesterday_data))
# 	if [[ -n $yesterday_data ]]; then
# 		covid_date=$(date -j -f "%Y-%m-%d" $yesterday +%s)
# 		covid_increase=$increase_yes
# 		covid_rate=$(( increase_yes/(increase_yyes+0.) ))
# 	else
# 		covid_date=$(date -j -f "%Y-%m-%d" $yyesterday +%s)
# 		covid_increase=$increase_yyes
# 		covid_rate=$(( increase_yyes/(increase_yyyes+0.) ))
# 	fi
# 	covid_date=$(date -r $covid_date +%m-%d)
# 	if ((covid_rate > 1)) then
# 		covid_rate=$(printf "%.2f" $(( covid_rate-1 )))
# 		covid_rate+=$'⬆'
# 	else
# 		covid_rate=$(printf "%.2f" $(( 1-covid_rate )))
# 		covid_rate+=$'⬇'
# 	fi
# 	echo -n "$(sed 's/\_data\_covid=\(.*\)$/\_data\_covid='"($covid_increase $covid_rate $covid_date $(date +%s))/" $current_conf)"\
# 	> $current_conf
# }
# update_exchange(){
# 	last_update=${_data_exchange[5]}
# 	#echo $(($(date +%s) -  last_update))
# 	let week_day=$(date -r ${last_update} "+%w")
# 	let now_week_day=$(date "+%w")
# 	if ((week_day < 5 || now_week_day < 5 )); then
# 		(( $(date +%s) > 60*60*12 + last_update )) && exchange &
# 	fi
# 	_data_exchange[1]=$(printf "%.3f" ${_data_exchange[1]})
# 	echo -n $'💰 '"${_data_exchange[1]} ${_data_exchange[2]} ${_data_exchange[3]} ${_data_exchange[4]}" 	
# }
# exchange(){
# 	data=$(curl --location --request GET 'https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=AUD&to_symbol=CNY&apikey=H2K0N4P198GTJUL7')
# 	exchange_date=()
# 	exchange_price=()
# 	exchange_rate=
# 	exchange_up_or_down=
# 	const_down=$'⬇'
# 	const_up=$'⬆'
# 	let start_line=11
# 	let end_line=13
# 	let stop_line=14
# 	exchange_price+=$(<<<$data sed -n "$start_line,${end_line}p;${stop_line}q" | grep "high" | grep -Eo "\d+\.\d+")
# 	exchange_date+=$(<<<$data sed -n "$start_line,${end_line}p;${stop_line}q" | grep -Eo "\d+\-\d+\"" | tr -d "\"")
# 	
# 	
# 	start_line+=6 end_line+=6 stop_line+=6
# 	exchange_price+=$(<<<$data sed -n "$start_line,${end_line}p;${stop_line}q" | grep "high" | grep -Eo "\d+\.\d+")
# 	exchange_date+=$(<<<$data sed -n "$start_line,${end_line}p;${stop_line}q" | grep -Eo "\d+\-\d+\"" | tr -d "\"")
# 	exchange_rate=$((exchange_price[1] / exchange_price[2]))
# 	#echo $exchange_price[1] >> ~/test
# 	#echo $exchange_price[2] >> ~/test
# 	#echo $exchange_rate >> ~/test
# 	if (( exchange_price[1] - exchange_price[2] <= 0 ))
# 	then
# 		exchange_rate=$(printf %.4f $(( 1 - exchange_rate )))
# 		exchange_up_or_down=$const_down
# 	else
# 		#echo $exchange_rate > ~/test
# 		exchange_rate=$(printf %.4f $(( exchange_rate - 1 )))
# 		exchange_up_or_down=$const_up
# 	fi
# 	
# 	let exchange_index=2
# 	while true
# 	do
# 		start_line+=6 end_line+=6 stop_line+=6
# 		new_price=${exchange_price[$exchange_index]}
# 		old_price=$(<<<$data sed -n "$start_line,${end_line}p;${stop_line}q" | grep "high" | grep -Eo "\d+\.\d+")
# 		if ((( new_price >= old_price )) && [[ "$exchange_up_or_down" = "$const_down" ]]) \
# 			|| ((( new_price <= old_price )) && [[ "$exchange_up_or_down" = "$const_up" ]]); then
# 			break
# 		fi
# 		exchange_index+=1
# 		exchange_price+=$old_price
# 		exchange_date+=$(<<<$data sed -n "$start_line,${end_line}p;${stop_line}q" | grep -Eo "\d+\-\d+\"" | tr -d "\"")
# 	done
# 	#echo $exchange_price
# 	#echo -n $exchange_date
# 	#echo $exchange_up_or_down
# 	#echo $exchange_rate
#  	echo -n "$(sed 's/\_data\_exchange=\(.*\)$/\_data\_exchange='"($exchange_price[1] $exchange_rate$exchange_up_or_down $((exchange_index-1)) $exchange_date[1] $(date +%s))/" $current_conf)"\
#  	> $current_conf
# }

# # Other functions
# $@